{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HP\\\\Desktop\\\\web\\\\ArtHive\\\\client\\\\src\\\\scenes\\\\widgets\\\\PostsWidget.jsx\",\n  _s = $RefreshSig$();\nimport { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setPosts } from \"state\";\nimport { deletePost } from \"state\";\nimport PostWidget from \"./PostWidget\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PostsWidget = _ref => {\n  _s();\n  let {\n    userId,\n    isProfile = false\n  } = _ref;\n  const dispatch = useDispatch();\n  const posts = useSelector(state => state.posts);\n  const token = useSelector(state => state.token);\n  const getPosts = async () => {\n    const response = await fetch(\"http://localhost:3001/posts\", {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const data = await response.json();\n    dispatch(setPosts({\n      posts: data\n    }));\n  };\n  const getUserPosts = async () => {\n    const response = await fetch(`http://localhost:3001/posts/${userId}/posts`, {\n      method: \"GET\",\n      headers: {\n        Authorization: `Bearer ${token}`\n      }\n    });\n    const data = await response.json();\n    dispatch(setPosts({\n      posts: data\n    }));\n  };\n  const handleDeletePost = async postId => {\n    try {\n      const response = await fetch(`http://localhost:3001/posts/${postId}`, {\n        method: \"DELETE\",\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      if (response.ok) {\n        dispatch(deletePost(postId));\n      } else {\n        // Handle error response\n        // (e.g., display an error message, handle authorization issues)\n      }\n    } catch (error) {\n      console.log(\"Error deleting post:\", error);\n    }\n  };\n  useEffect(() => {\n    if (isProfile) {\n      getUserPosts();\n    } else {\n      getPosts();\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: posts.map(_ref2 => {\n      let {\n        _id,\n        userId,\n        firstName,\n        lastName,\n        description,\n        location,\n        picturePath,\n        userPicturePath,\n        likes,\n        comments\n      } = _ref2;\n      return /*#__PURE__*/_jsxDEV(PostWidget, {\n        postId: _id,\n        postUserId: userId,\n        name: `${firstName} ${lastName}`,\n        description: description,\n        location: location,\n        picturePath: picturePath,\n        userPicturePath: userPicturePath,\n        likes: likes,\n        comments: comments,\n        onDelete: handleDeletePost\n      }, _id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this);\n    })\n  }, void 0, false);\n};\n_s(PostsWidget, \"7TqOh3V0nCSP3QUJlbitnmq7L8o=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n_c = PostsWidget;\nexport default PostsWidget;\nvar _c;\n$RefreshReg$(_c, \"PostsWidget\");","map":{"version":3,"names":["useEffect","useDispatch","useSelector","setPosts","deletePost","PostWidget","jsxDEV","_jsxDEV","Fragment","_Fragment","PostsWidget","_ref","_s","userId","isProfile","dispatch","posts","state","token","getPosts","response","fetch","method","headers","Authorization","data","json","getUserPosts","handleDeletePost","postId","ok","error","console","log","children","map","_ref2","_id","firstName","lastName","description","location","picturePath","userPicturePath","likes","comments","postUserId","name","onDelete","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/HP/Desktop/web/ArtHive/client/src/scenes/widgets/PostsWidget.jsx"],"sourcesContent":["import { useEffect } from \"react\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { setPosts } from \"state\";\nimport { deletePost } from \"state\";\nimport PostWidget from \"./PostWidget\";\n\n\n\nconst PostsWidget = ({ userId, isProfile = false }) => {\n  const dispatch = useDispatch();\n  const posts = useSelector((state) => state.posts);\n  const token = useSelector((state) => state.token);\n\n  const getPosts = async () => {\n    const response = await fetch(\"http://localhost:3001/posts\", {\n      method: \"GET\",\n      headers: { Authorization: `Bearer ${token}` },\n    });\n    const data = await response.json();\n    dispatch(setPosts({ posts: data }));\n  };\n\n  const getUserPosts = async () => {\n    const response = await fetch(\n      `http://localhost:3001/posts/${userId}/posts`,\n      {\n        method: \"GET\",\n        headers: { Authorization: `Bearer ${token}` },\n      }\n    );\n    const data = await response.json();\n    dispatch(setPosts({ posts: data }));\n  };\n  \n  const handleDeletePost = async (postId) => {\n    try {\n      const response = await fetch(`http://localhost:3001/posts/${postId}`, {\n        method: \"DELETE\",\n        headers: {\n          Authorization: `Bearer ${token}`,\n        },\n      });\n  \n      if (response.ok) {\n        dispatch(deletePost(postId));\n      } else {\n        // Handle error response\n        // (e.g., display an error message, handle authorization issues)\n      }\n    } catch (error) {\n      console.log(\"Error deleting post:\", error);\n    }\n  };\n  \n\n  useEffect(() => {\n    if (isProfile) {\n      getUserPosts();\n    } else {\n      getPosts();\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return (\n    <>\n      {posts.map(\n        ({\n          _id,\n          userId,\n          firstName,\n          lastName,\n          description,\n          location,\n          picturePath,\n          userPicturePath,\n          likes,\n          comments,\n        }) => (\n          <PostWidget\n            key={_id}\n            postId={_id}\n            postUserId={userId}\n            name={`${firstName} ${lastName}`}\n            description={description}\n            location={location}\n            picturePath={picturePath}\n            userPicturePath={userPicturePath}\n            likes={likes} \n            comments={comments}\n            onDelete={handleDeletePost}\n          />\n        )\n      )}\n    </>\n  );\n};\n\n\n\nexport default PostsWidget;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}